name: Auto Update Rokit

on:
  workflow_dispatch:  # Allows manual triggering
  schedule:
    - cron: '0 */12 * * *'  # Check every 12 hours

jobs:
  check-and-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Fetch latest Rokit version
        id: rokit-version
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/rojo-rbx/rokit/releases/latest | jq -r '.tag_name' | sed 's/^v//')
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV
          CURRENT_VERSION=$(node -e "console.log(require('./package.json').version)")
          CURRENT_ROKIT_VERSION=$(node -e "console.log(require('./package.json').version.split('+rokit')[1] || '')")
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
          echo "CURRENT_ROKIT_VERSION=$CURRENT_ROKIT_VERSION" >> $GITHUB_ENV
          
          if [ "$LATEST_VERSION" != "$CURRENT_ROKIT_VERSION" ]; then
            echo "UPDATE_NEEDED=true" >> $GITHUB_ENV
          else
            echo "UPDATE_NEEDED=false" >> $GITHUB_ENV
          fi

      - name: Download new binaries (if update needed)
        if: env.UPDATE_NEEDED == 'true'
        run: npm run download-binaries

      - name: Update package version
        if: env.UPDATE_NEEDED == 'true'
        run: |
          WRAPPER_VERSION=$(echo "$CURRENT_VERSION" | cut -d'+' -f1)
          NEW_VERSION="${WRAPPER_VERSION}+rokit${LATEST_VERSION}"
          node -e "
            const pkg = require('./package.json');
            pkg.version = '$NEW_VERSION';
            fs.writeFileSync('./package.json', JSON.stringify(pkg, null, 2) + '\n');
          "
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Commit and push changes
        if: env.UPDATE_NEEDED == 'true'
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add .
          git commit -m "Update Rokit to version $LATEST_VERSION"
          git tag "v$NEW_VERSION"
          git push
          git push --tags

      - name: Publish to npm
        if: env.UPDATE_NEEDED == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: env.UPDATE_NEEDED == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ env.NEW_VERSION }}"
          release_name: "Release v${{ env.NEW_VERSION }}"
          body: |
            This release contains Rokit version ${{ env.LATEST_VERSION }}.
            
            Automatic update triggered by GitHub Actions.
          draft: false
          prerelease: false